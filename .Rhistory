Data$data
plot(1:100)
Cama <- data.frame(Nome = 'Absolut', Tamanho = 'Casal', Valor = 1500)
Cama <- rbind(Cama,
data.frame(Nome = 'Absolut', Tamanho = 'Queen', Valor = 1819))
579 + 1819
2398/10
1799/10
40/30
240-180
install.packages('changepoint')
require(changepoint)
demo(changepoint)
example(changepoint)
x <- round(sin(x = seq(from = 0 , to = 4 * pi , by = 0.001)))
x
plot(x)
x <- round(sin(x = seq(from = 0 , to = 4 * pi , by = 0.0001)))
plot(x)
example(changepoint)
ansmean=cpt.mean(x)
plot(ansmean,cpt.col='blue')
?x
x
x
x <- round(sin(x = seq(from = 0 , to = 4 * pi , by = 0.0001)))
x
ansvar=cpt.var(x)
plot(ansvar)
plot(x, type = 'l')
ansmean=cpt.mean(x)
plot(ansmean,cpt.col='blue')
ansmeanvar=cpt.meanvar(x)
plot(ansmeanvar,cpt.width=3)
rm(list = ls())
set.seed(1234)
require(bcp)
x <- .arg1; changeThresh <- .arg2[1]; w0_param <- .arg3[1]; p0_param <- .arg4[1]
bcpRes <- bcp(x, p0 = p0_param, w0 = w0_param)
changePoints <- which(bcpRes$posterior.prob >= changeThresh)
breaks <- diff(c(0,changePoints,length(x)))
trendGroup <- unlist(sapply(c(1:length(breaks)), function(i){
rep(i,breaks[i])
}))
return(rep(tapply(x, trendGroup, mean), breaks))
install.packages('bcp')
rm(list = ls())
set.seed(1234)
require(bcp)
x <- .arg1; changeThresh <- .arg2[1]; w0_param <- .arg3[1]; p0_param <- .arg4[1]
bcpRes <- bcp(x, p0 = p0_param, w0 = w0_param)
changePoints <- which(bcpRes$posterior.prob >= changeThresh)
breaks <- diff(c(0,changePoints,length(x)))
trendGroup <- unlist(sapply(c(1:length(breaks)), function(i){
rep(i,breaks[i])
}))
return(rep(tapply(x, trendGroup, mean), breaks))
8^5/18
setwd("~/Desktop/My-R-Course")
setwd("~/Desktop/My-R-Course")
install.packages('swirl')
require(swirl)
?swirl
swirl()
install.packages(c("swirl", 'caret'))
install.packages(c("swirl", "caret"))
require('knitr')
packNames <- c('dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongoite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'Rcpp',
'RCurl', 'sparklyr',
'swirl', 'xlsx')
install.packages(pkgs = packNames)
install.packages(pkgs = packNames)
packNames <- c('dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongoite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'Rcpp',
'RCurl', 'sparklyr',
'swirl', 'xlsx')
new.packages <- packNames[!(packNames %in% installed.packages()[,"Package"])]
new.packages
packNames <- c('RCPP', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx')
newPackages <- packNames[!(packNames %in% installed.packages()[,"Package"])]
newPackages
packNames <- c('Rcpp', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx')
newPackages <- packNames[!(packNames %in% installed.packages()[,"Package"])]
packNames
installed.packages()[,"Package"]
packNames %in% installed.packages()[,"Package"]
new.packages
install.packages
packNames <- c('Rcpp', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx')
newPackages <- packNames[!( packNames %in% installed.packages()[, "Package"] )]
newPackages
newPackages
packNames <- c('Rcpp', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx')
newPackages <- packNames[!( packNames %in% installed.packages()[, "Package"] )]
if(length(newPackages)) sapply(newPackages, install.packages)
packNames <- c('Rcpp', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx',
'slidify')
newPackages <- packNames[!( packNames %in% installed.packages()[, "Package"] )]
if(length(newPackages)) sapply(newPackages, install.packages)
packNames <- c('Rcpp', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx',
'slidify')
newPackages <- packNames[!( packNames %in% installed.packages()[, "Package"] )]
newPackages
sapply(newPackages, install.packages)
Introdução
========================================================
author: Paulo Cirino Ribeiro Neto
date: 06 de Janeiro de 2017
autosize: true
Surgimento do R
========================================================
- Desenvolvida por **Ross Ihaka** e por **Robert Gentleman**;
- Inicalmente era uma linguagem Estatística;
- Feita para subistituir as linguagens comerciais S e S-Plus;
- Criado sob a licença aberta GNU-GPL.
Onde R é utilizado
========================================================
- Produção automática de relatórios;
- Análise de experimentos;
- Produção de gráficos;
- Análise exploratória de dados;
- Análise estatística;
- *Machine Learning*
Porque Aprender R
========================================================
- Linguagem fácil de utilizar e de rápido desenvolvimento para pequenos trabalhos de análise;
- Inúmeros Pacotes criados e mantidos por uma das comunidades mais ativas da atualidade ([CRAN](CRAN.r-project.org));
- Ótima plataforma para produção de gráficos ([ggplot2](http://ggplot2.org/) e [plotly](https://plot.ly/r/)),  documentos ([Knitr](http://yihui.name/knitr/) e [Sweave](https://en.wikipedia.org/wiki/Sweave)) e protótipos  ([shiny](https://shiny.rstudio.com/));
- Excelente interfaces para bancos SQL e No-SQL, e para manipular dados([dplyr](https://github.com/hadley/dplyr) e [plyr](http://had.co.nz/plyr/));
- Capacidade de utilização de **C**, **C++** e **FORTRAN** para tarefas computacionalmente pesadas;
- Uma das melhores IDEs (Rstudio).
Instalando o R
========================================================
### Debian :
```{}
$sudo apt-get install r-base r-base-dev
```
### RedHat :
```{}
$sudo yum install R
```
### MacOs - brew :
```{}
$brew install cask
$brew tap homebrew/science
$brew install Caskroom/cask/xquartz
$brew install r
```
### Windows :
Baixar no [CRAN](https://cran.r-project.org/bin/windows/base/R-3.3.2-win.exe);
Instalando o RStudio
========================================================
- **Debian** : [32 Bits](https://download1.rstudio.org/rstudio-1.0.136-i386.deb) e [64 Bits](https://download1.rstudio.org/rstudio-1.0.136-amd64.deb)
- **RedHat** : [32 Bits](https://download1.rstudio.org/rstudio-1.0.136-i686.rpm) e [64 Bits](https://download1.rstudio.org/rstudio-1.0.136-x86_64.rpm)
- **MacOs** :  [64 Bits](https://download1.rstudio.org/RStudio-1.0.136.dmg)
- **Debian** : [32/64 Bits](https://download1.rstudio.org/RStudio-1.0.136.exe)
Programação
========================================================
### R Básico
- **Modulo 01** : Sintaxe, Estruturas de Dado e Operadores;
- **Modulo 02** : Criando as próprias Funções;
- **Modulo 03** : A família apply de Funções;
### R Prático
- **Modulo 04** : Produção de Gráficos Estáticos e Interatívos;
- **Modulo 05** : Lidando com *Data Frames* e os pacotes **dplyr** e **plyr** ;
- **Modulo 06** : Data Scrapping e Data Parsing;
- **Modulo 07** : Machine Learning com o Pacote caret;
\pagebreak
### R e suas Aplicações
- **Modulo 08** : Produção de Relatórios, Apresentações e Documentos com o **Knitr**;
- **Modulo 09** : Desenvolvendo Aplicativos Web e Dashboards com o **Shiny**;
Pacotes Necessários
========================================================
```{r, echo = TRUE}
packNames <- c('Rcpp', 'devtools',
'dplyr', 'plyr',
'caret', 'ggplot2',
'plotly', 'shiny',
'knitr', 'jsonlite',
'mongolite', 'e1071',
'xgboost', 'curl',
'DT', 'ggdendro',
'rCharts', 'RCurl', 'sparklyr',
'swirl', 'xlsx')
newPackages <- packNames[!( packNames %in% installed.packages()[, "Package"] )]
if(length(newPackages)) sapply(newPackages, install.packages)
```
?%>%
?%*%
%*%
M = matrix( c(2,6,5,1,10,4), nrow = 2,ncol = 3,byrow = TRUE)
M
t(M)
M %*% t(M)
M
N = matrix( c(5,6,1,1,7,-4), nrow = 3,ncol = 2,byrow = TRUE)
N
M
M %*% N
a <<- 3
a
v1 <- c(3,1,TRUE,2+3i)
v2 <<- c(3,1,TRUE,2+3i)
v3 = c(3,1,TRUE,2+3i)
print(v1)
print(v2)
print(v3)
v1
class(v1)
v2
v3
v1
class(v1)
c(3,1,TRUE,2+3i) -> v1
c(3,1,TRUE,2+3i) ->> v2
print(v1)
print(v2)
class(v1)
class(v2)
type(a)
a
as.integer(-12)
as.integer(-12.32)
a <- as.matrix(sample(9))
a <- as.matrix(sample(9), ncol = 3)
a
a <- matrix(sample(9), ncol = 3)
a
a[4, ] <- 1:3
matrix(1:10)
matrix(1:10, ncol = 2)
matrix(as.character(1:10), ncol = 2)
class(matrix(as.character(1:10), ncol = 2))
class(matrix(as.factor(1:10), ncol = 2))
class(matrix(as.integer(1:10), ncol = 2))
matrix(as.integer(1:10), ncol = 2)
matrix(as.complex(1:10), ncol = 2)
array(1:15, dim = 3)
array(1:15, dim = 3)
array(1:30, dim = c(3,5,2) )
array(as.character(1:30), dim = c(3,5,2) )
?data.frame
c(1,10, -6)
c('foo', 'bar', 'baz')
[1,2,3]
(1,2,3)
{1,2,3}
matrix(data = 1:6, ncol = 2, nrow = 2)
matrix(data = 1:6, ncol = 2, nrow = 3)
matrix(data = 1:6, ncol = 3, nrow = 2)
array(data = 1:12, dim = c(2,3,2))
list(Universities = c('Harvard', 'Oxford', 'UFMG'),
Students = data.frame( Name = c('Mark', 'Janet'),
Age = c(19, 21),
GPA = c(3.4, 3.7)),
Accepted = c(TRUE, FALSE))
'foo' -> bar
bar
c('blue', 'black', 'blue')
class(c('blue', 'black', 'blue'))
factor(c('blue', 'black', 'blue'))
c(TRUE, TRUE, FALSE) ->> Bols
Bols
Bithday = as.Date('13/05/1994')
Bithday
Bithday = as.Date('1994/05/13')
Bithday
class(Bithday)
name = 'Paulo'
name
c(TRUE, TRUE, FALSE) ->> Bols
Bols
colors <<- factor(c('blue', 'black', 'blue'))
colors
factor(c('blue', 'black', 'blue'))
colors <<- factor(c('blue', 'black', 'blue'))
colors
colors <- factor(c('blue', 'black', 'blue'))
number <<- 13
number
numbers <- c(3.2, 5.7, -12.1)
numbers
name <- 'Jack'
name
number <<- 13
number
number <<- 13
number
colors <<- factor(c('blue', 'black', 'blue'))
colors
colors
colors
color <<- factor(c('blue', 'black', 'blue'))
color
colors
colors <- 1:10
cols <<- factor(c('blue', 'black', 'blue'))
c <<- factor(c('blue', 'black', 'blue'))
c <<- try(factor(c('blue', 'black', 'blue')))
c
c <<- try(factor(c('blue', 'black', 'blue')))
c
try(factor(c('blue', 'black', 'blue')))
try(c <<- factor(c('blue', 'black', 'blue')))
?<<-
a <- 234
a
a <<- 2344
a
a <<- function(x) { print(x)}
a
a <<- 23423
a
pi
pi <<- 234
pi <- -19
pi
1423 ->>c
e
e
sum
letters
?mean
?sum
a <- 15
b <- 'character string'
?print
listVar <- list(var1 = 12, var2 = 'abc')
print(x = listVar)
32 > 10
32 > 10:20
32:23 > 10:20
12 > 'b'
1 > 'b'
-1 > 'b'
rep(10, 3) >= 9:11
rep(10, 3) == 9:11
%in%
12 %in% 1:100
summary
1:10 == 1
23 > 23:25
23:30 > 23:25
class(try(1:10 <= 2:3))
try(1:10 <= 2:3)
class(try(1:10 <= 2:30))
class(try(1:10 <= 2:30))
try(1:10 <= 2:30)
!23
TRUE == 'b'
TRUE == 1
( (2:4) >= 3) & ( (2:4) <= 3)
( (2:4) >= 3) && ( (2:4) <= 3)
TRUE & 1
!2
!'a'
!('a')
( (2:4) >= 3) || ( (2:4) <= 3)
( (2:4) >= 3) | ( (2:4) <= 3)
( (2:4) >= 3) | ( (2:4) == 3)
( (2:4) >= 3) || ( (2:4) == 3)
( (2:4) >= 3) || ( (2:4) == 2)
letters
letters[-5]
letters[-5]
letters[-1]
letters[-1:-15]
letters[-1:-20]
letters[-1:-10]
sample(10)
?sample
?sample(x = 10)
sample(x = 10)
sample(x <- 15)
x
require('plumbr')
require('plumber')
5 %%2
5 %/%2
number <<- 13
number
number
cols <<- factor(c('blue', 'black', 'blue'))
cols
cols
CLASS(cols)
class(cols)
try(c <<- factor(c('blue', 'black', 'blue')))
c
try(c <- factor(c('blue', 'black', 'blue')))
c
try(c <<- factor(c('blue', 'black', 'blue')))
c
try(c <- factor(c('blue', 'black', 'blue')))
try(pi <<- -19)
pi
pi
try(c <- factor(c('blue', 'black', 'blue')))
try(pi <- -19)
pi
Bools
c(TRUE, TRUE, FALSE) ->> Bools
Bools
letters
try(1234 ->> letters)
letters
try(1234 -> letters)
letters
Bools
Bools
name = 'Paulo'
name
n
sample()
sample
args(sample)
args(sample)[1]
class()
class(args(sample))
args(sample)
args(sample)()
eval(args(sample))
args(sample)
print(args(round))
print(args(sum))
print(args(class))
class(x)
x <- 123
print(args(class))
print(args(sample))
sample(x = 4)
( (2:4) >= 3) | ( (2:4) == 2)
( (2:4) >= 3) || ( (2:4) == 2)
( (2:4) >= 3) | ( (2:4) == 3)
( (2:4) >= 3) || ( (2:4) == 3)
LETTERS[-1:-10]
?help
print(?help)
type(12)
summary(1:10)
t(matrix())
t(matrix(1:9, ncol = 3, nrow = 3))
myList <- list(a = 1:10, b = LETTERS[10:15])
help('')
help()
